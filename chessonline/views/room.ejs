<!DOCTYPE html>
<html>
<head>
	<title><%= title %></title>
    <link rel="stylesheet" type="text/css" href="/css/chess.css">
</head>
<body>

    <div class='messageBox' style="display: none;">
        <span id='messageInfo'>当前是对方回合！</span>
        <button id='messageCheck'>我知道了</button>
    </div>

    <div class='web-background'>
        <div class='chess-background'>
            <div class='chess-box'>
                 <canvas id='checkerboard' width='400px' height="450px"></canvas>
            </div>
        </div>
        <div class='chess-3d'></div>
        <div class='user_box'>
            <div id='enemy' class='user_module'>
                <div class='user_message'>
                    <div class='user_pic'></div>
                    <div class='user_name'><span id="opponentName"></span></div>
                    <div id='enemy_time' class='user_time'>00:00</div>
                </div>
            </div>
            <div class='vs'>
                <img src='/pic/VS.png' alt='图片加载失败' style='width:200px;'></img>
            </div>
            <div id='own' class='user_module'>
                <div class='user_message' style="margin-top: 125px;">
                    <div class='user_pic'></div>
                    <div class='user_name'><span id="userName"></span></div>
                    <div id='own_time' class='user_time'>00:00</div>
                    <div class='user_surrender'>认输</div>
                    <div class='user_Retract'>悔棋</div>
                </div>
            </div>
        </div>
        <div class='ready_button'>准备</div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript" src="/lib/jquery.js"></script>
    <script type="text/javascript" src='/js/user.js'></script>
    <script src="/lib/layer-v3.1.1/layer/layer.js"></script>

    <script>

        //设置昵称
        var userName = '';
        while ($('#userName').text().trim() === '') {
            userName = prompt("请设置你的昵称","");
            $('#userName').text(userName);
        }

        //创建连接
        var socket = io();

        //加入房间
        socket.on('connect', function () {
            socket.emit('join', userName);
        });

        //房间人数达到上限
        socket.on('full', function(){
            sendMessage('人数已满！');
        });

        //获取身份（红子或黑子）
        socket.on('identify', function(identity){
            chess_user=identity;
            $(init);
        });

        //获得对方名字
        socket.on('opponentName', function(info){
            $('#opponentName').text(info);
        });


        $(chess_moving)
        $(time)

        var c=1;
        var chess_num;
        var user='red';
        var chess_user;
        var board = document.getElementById("checkerboard");
        var ctx = board.getContext('2d');

        var send_name;
        var send_eated;
        var send_x;
        var send_y;

        var win = 0,lost=0;

        function sendMessage(msg){
            $('#messageInfo').text(msg);
            layer.open({
                type: 1
                ,title: '提示信息'
                ,resize: false
                ,skin: 'layui-layer-lv'
                ,shadeClose: true
                ,area : ['250px' , '200px']
                ,content: $('.messageBox')//弹框显示的url
            });
        }

        $('#messageCheck').on('click',function(){
            layer.close(layer.index);
            window.close();
        });

        var object ={
        	init:function(){
                this.ctx = board.getContext('2d');
                this.ctx.strokeWidth = 5;
                this.ctx.strokeStyle = "black";
                this.ctx.strokeRect(0, 0, 400, 450);

                this.row();
                this.cols();
                this.drawFont();
                this.center(50,100);
                this.center(350, 100);
                this.center(0, 150);
                this.center(100, 150);
                this.center(200, 150);
                this.center(300, 150);
                this.center(400, 150);
                this.center(400, 300);
                this.center(300, 300);
                this.center(200, 300);
                this.center(100, 300);
                this.center(0, 300);
                this.center(350, 350);
                this.center(50, 350);
            },

            LineDrawing:function(mx,my,lx,ly){
            	this.ctx.beginPath();
            	this.ctx.moveTo(mx,my);
            	this.ctx.lineTo(lx,ly);
            	this.ctx.stroke();
            },

            row:function(){
            	for(var i=50;i<=400;i+=50){
            		this.ctx.beginPath();
            		this.ctx.moveTo(0,i);
            		this.ctx.lineTo(400,i);
            		this.ctx.stroke();
            	}
            },

            cols:function(){
            	for(var i=50;i<=400;i+=50){
            		this.ctx.beginPath();
            		this.ctx.moveTo(i,0);
            		this.ctx.lineTo(i,450);
            		this.ctx.stroke();
            	}

            	this.ctx.clearRect(1,201,398,49);
            	this.LineDrawing(150,0,250,100);
            	this.LineDrawing(150,350,250,450);

            	this.LineDrawing(250,0,150,100);
            	this.LineDrawing(250,350,150,450);
            },

            center:function(x,y){
            	this.ctx.lineWidth = 3;

            	this.LineDrawing(x-5,y-15,x-5,y-5);
            	this.LineDrawing(x-5,y-5,x-15,y-5);

            	this.LineDrawing(x+5,y-15,x+5,y-5);
            	this.LineDrawing(x+5,y-5,x+15,y-5);

            	this.LineDrawing(x-5,y+15,x-5,y+5);
            	this.LineDrawing(x-5,y+5,x-15,y+5);

            	this.LineDrawing(x+5,y+15,x+5,y+5);
            	this.LineDrawing(x+5,y+5,x+15,y+5);
            },

            drawFont:function(){
            	this.ctx.lineWidth = 1;
            	this.ctx.font = "30px Lisu";
            	this.ctx.save();
            	this.ctx.translate(board.width/2,board.height/2);
            	var radian = Math.PI/2;
            	this.ctx.rotate(radian);

            	this.ctx.fillText("楚",-15,-135);
            	this.ctx.fillText("河",-15,-75);
            	this.ctx.restore();
            	this.ctx.save();

                this.ctx.translate(board.width / 2, board.height / 2);
                var radian = Math.PI / -2;
                this.ctx.rotate(radian);
                this.ctx.fillText("汉", -15, -135);
                this.ctx.fillText("界", -15, -75);
                this.ctx.restore();
            }
        };

        object.init();


        //象棋初始化的一些信息
        var red_chessman=["車","马","象","士","帥","士","象","马","車","炮","炮","兵","兵","兵","兵","兵"];
        var red_chessman_id=["ju","ma","xiang","shi","shuai","2shi","2xiang","2ma","2ju","pao","2pao","bing","2bing","3bing","4bing","5bing"];
        var red_x=[0,50,100,150,200,250,300,350,400,50,350,0,100,200,300,400];
        var red_y=[0,0,0,0,0,0,0,0,0,100,100,150,150,150,150,150];
        var black_chessman=["車","马","象","士","将","士","象","马","車","炮","炮","卒","卒","卒","卒","卒"];
        var black_chessman_id=["ju","ma","xiang","shi","jiang","2shi","2xiang","2ma","2ju","pao","2pao","zu","2zu","3zu","4zu","5zu"];
        var black_x=[0,50,100,150,200,250,300,350,400,50,350,0,100,200,300,400];
        var black_y=[450,450,450,450,450,450,450,450,450,350,350,300,300,300,300,300];

        var red_chessman_id1=["2ju","2ma","2xiang","2shi","shuai","shi","xiang","ma","ju","2pao","pao","5bing","4bing","3bing","2bing","bing"];
        var red_x1=[0,50,100,150,200,250,300,350,400,50,350,0,100,200,300,400];
        var red_y1=[450,450,450,450,450,450,450,450,450,350,350,300,300,300,300,300];
        var black_chessman_id1=["2ju","2ma","2xiang","2shi","jiang","shi","xiang","ma","ju","2pao","pao","5zu","4zu","3zu","2zu","zu"];
        var black_x1 = [0,50,100,150,200,250,300,350,400,50,350,0,100,200,300,400];
        var black_y1 = [0,0,0,0,0,0,0,0,0,100,100,150,150,150,150,150];
        //棋子初始排布
        var chess_position = [
            [1,1,1,1,4,1,1,1,1],
            [0,0,0,0,0,0,0,0,0],
            [0,1,0,0,0,0,0,1,0],
            [1,0,1,0,1,0,1,0,1],
            [0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0],
            [2,0,2,0,2,0,2,0,2],
            [0,2,0,0,0,0,0,2,0],
            [0,0,0,0,0,0,0,0,0],
            [2,2,2,2,3,2,2,2,2]
        ];

        function init(){
        	//初始化棋子位置
            var x=$('#checkerboard').offset().left;
            var y=$('#checkerboard').offset().top;

            if(chess_user=='black'){
                for(i=0;i<16;i++){
                    $('.chess-box').append("<div"+" id='"+"red_"+red_chessman_id[i]+"' "+"class='chessman_box'><div class='chessman_border'>"+red_chessman[i]+"</div><div class='chessman-shadow'></div></div>");
                    $("#red_"+red_chessman_id[i]).css({
                        'left': x+red_x[i]-$('.chessman_box').width()/2+"px",
                        'top': y+red_y[i]-$('.chessman_box').height()/2+"px"
                    });
                }

                for(i=0;i<16;i++){
                    $('.chess-box').append("<div"+" id='"+"black_"+black_chessman_id[i]+"' "+"class='chessman_box'><div class='chessman_border'"+"style='color: black; border:2px solid black;'>"+black_chessman[i]+"</div><div class='chessman-shadow'></div></div>");
                    $("#black_"+black_chessman_id[i]).css({
                        'left': x+black_x[i]-$('.chessman_box').width()/2+"px",
                        'top': y+black_y[i]-$('.chessman_box').height()/2+"px"
                    });
                }
            }
            else if(chess_user=='red'){
                for(i=0;i<16;i++){
                    $('.chess-box').append("<div"+" id='"+"red_"+red_chessman_id1[i]+"' "+"class='chessman_box'><div class='chessman_border'>"+red_chessman[i]+"</div><div class='chessman-shadow'></div></div>");
                    $("#red_"+red_chessman_id1[i]).css({
                        'left': x+red_x1[i]-$('.chessman_box').width()/2+"px",
                        'top': y+red_y1[i]-$('.chessman_box').height()/2+"px"
                    });
                }

                for(i=0;i<16;i++){
                    $('.chess-box').append("<div"+" id='"+"black_"+black_chessman_id1[i]+"' "+"class='chessman_box'><div class='chessman_border'"+"style='color: black; border:2px solid black;'>"+black_chessman[i]+"</div><div class='chessman-shadow'></div></div>");
                    $("#black_"+black_chessman_id1[i]).css({
                        'left': x+black_x1[i]-$('.chessman_box').width()/2+"px",
                        'top': y+black_y1[i]-$('.chessman_box').height()/2+"px"
                    });
                }

            }
        }

        function chess_reduction(){
            //还原棋子大小
            $('.chessman_box').css({
            	'z-index':'7',
        		'width': '45px',
        		'height': '45px',
        		'box-shadow':'8px 8px 2px -1px rgba(0,0,0,0.6)'
        	});
        	$('.chessman_border').css({
        		'width': '30px',
        		'height': '30px',
        		'left':'7px',
        		'top': '4px',
        		'font-size':'24px',
        	});
        	$('.chessman-shadow').css({
        		'width': '41px',
        		'height': '36px',
        		'-webkit-transform':'scale(1,1.10)',
        		'box-shadow':'0 8px rgba(0,0,0,0.2)'
        	});
        }

        var id_eated;//被吃棋子的id
        var id_user;//使用棋子的id
        var chess_clicknum=0;//点击的计数

        function chess_moving(){
        	//点击棋子时出现的效果
            $('.chess-box').on('click','.chessman_box',function(event){
            	if(chess_clicknum==0){
                    id_user = $(this).attr("id");
                    chess_clicknum=1;
                    if(id_user.indexOf(chess_user)==-1){
                        chess_clicknum=0;
                        alert("这不是你的棋子!");
                    }
            	}
            	else{
            		id_eated = $(this).attr("id");
            		if(id_user.substr(0,3)==id_eated.substr(0,3)){
            			id_user=id_eated;
            		}
            		//吃棋
            		else{
            			console.log('u:'+id_user+'e:'+id_eated);
                        //获取圆点
                        var $elements = $('.circle');
                        var len = $('.circle').length;
                        var flag = 0;
                        for(var i=0;i<len;i++){
                            if($('.circle').eq(i).position().left>$('#'+id_eated).position().left&&
                            	$('.circle').eq(i).position().top>$('#'+id_eated).position().top&&
                            	$('.circle').eq(i).position().left<$('#'+id_eated).position().left+$('#'+id_eated).width()&&
                            	$('.circle').eq(i).position().top<$('#'+id_eated).position().top+$('#'+id_eated).height()){
                            	flag=1;
                            }
                        }
                        if(flag===1){
                        	//改变二维数组的坐标值
                        	change_co($('#'+id_user).position().left,$('#'+id_user).position().top,$('#'+id_eated).position().left,$('#'+id_eated).position().top);
                        	chess_clicknum=0;
                        	//移动的信息

                        	send_name  = id_user;
                        	send_eated = id_eated;
                        	send_x = $('#'+id_eated).position().left;
                        	send_y = $('#'+id_eated).position().top;

                            socket.emit('chessMove', {
                                user_name:send_name,
                                eated_name:send_eated,
                                x:send_x,
                                y:send_y
                            });

        	                $('#'+id_user).animate({
        	                	'left': $('#'+id_eated).css('left'),
        	                	'top': $('#'+id_eated).css('top')},
        	                	500, function() {
        	                	$('#'+id_eated).remove();
        	                	chess_reduction();
        	                	if(user=='red')
        		    	    	    user='black';
        		    	        else
        		    	    	    user='red';
        		    	        c=1;
        		    	        $('.circle').remove();
        		    	        wining(4);
        	                });
        	                clearInterval(start);
        	                time();
                        }
            		}
            	}

                if(id_user.indexOf(chess_user)==-1){
                    alert("这不是你的棋子!");
                    chess_clicknum=0;
                    id_user="null";

                }
                else if(id_user.indexOf(user)==-1){
                    alert("当前是对方的回合！");
                    id_user="null";
                    chess_clicknum=0;
                }
                else{
                	$('div').remove('.circle');
                	c=1;
                	chess_reduction();
        			if(c===1){
        				click_cartoon(id_user);
        			    c=2;
        			    chess_rule(id_user);
        			}
                }
            });

            //移动棋子
        	$('.chess-box').on('click','.circle',function(event) {
        		/* Act on the event */

        	    var chess_x=$(this).position().left;
        	    var chess_y=$(this).position().top;

        	    change_co($('#'+id_user).position().left,$('#'+id_user).position().top,chess_x,chess_y);

        	    if(c===2){
        	    	$('div').remove('.circle');
        	    	//移动的信息
                    send_name  = id_user;
                    send_eated = null;
                    send_x = chess_x+7-$('.chessman_box').width()/2;
                    send_y = chess_y+7-$('.chessman_box').height()/2;

                    socket.emit('chessMove', {
                        user_name:send_name,
                        eated_name:send_eated,
                        x:send_x,
                        y:send_y
                    });

        	        $('#'+id_user).animate({
        	    	    left: chess_x+7-$('.chessman_box').width()/2+'px',
        	            top:  chess_y+7-$('.chessman_box').height()/2+'px'},500, function() {
        	    	    /* stuff to do after animation is complete */
        	    	    chess_reduction();
        	    	    if(user=='red')
        	    	    	user='black';
        	    	    else
        	    	    	user='red';
        	    	    c=1;
        	    	    chess_clicknum=0;
        	        });
        	        clearInterval(start);
        	        time();
        	    }
        	});
        }

        function click_cartoon(str){
            $('#'+str).css({
                'z-index':'100',
                'width': '50px',
                'height': '50px',
                'box-shadow':'15px 30px 6px -10px rgba(0,0,0,0.6)'
            });
            $('#'+str).children('.chessman_border').css({
                'width':'34px',
                'height': '34px',
                'left':'8px',
                'top': '2px',
                'font-size':'30px',
            });
            $('#'+str).children('.chessman-shadow').css({
                'width': '45px',
                'height': '40px',
                '-webkit-transform':'scale(1,1.0)',
                'box-shadow':'0 11px rgba(0,0,0,0.2)'
            });
        }
        //二维数组修改的函数
        function change_co(be_x,be_y,af_x,af_y){
        	var x=$('#checkerboard').offset().left;
            var y=$('#checkerboard').offset().top;

            var b_y = Math.round((be_x-x)/50);
        	var b_x = Math.round((be_y-y)/50);

        	var a_y = Math.round((af_x-x)/50);
        	var a_x = Math.round((af_y-y)/50);
            chess_position[a_x][a_y]=chess_position[b_x][b_y];
        	chess_position[b_x][b_y]=0;
        	console.log(chess_position);
        }

        socket.on('move',cartoon);

        //敌方移动动画
        function cartoon(data){
            var b_x=$('#checkerboard').offset().left;
            var b_y=$('#checkerboard').offset().top;
            var left_x = (b_x+$('#checkerboard').width())-(data.x-b_x)-$('#'+data.user_name).width();
            var top_y = (b_y+$('#checkerboard').height())-(data.y-b_y)-$('#'+data.user_name).height();
            if(data.eated_name==null){
                 click_cartoon(data.user_name);
                 change_co($('#'+data.user_name).position().left,$('#'+data.user_name).position().top,left_x,top_y);
                 $('#'+data.user_name).animate({
                    left: left_x+'px',
                    top:  top_y+'px'},500, function() {
                    /* stuff to do after animation is complete */
                    chess_reduction();
                    if(user=='red')
                        user='black';
                    else
                        user='red';
                 });
            }
            if(data.eated_name!=null){
                 click_cartoon(data.user_name);
                 change_co($('#'+data.user_name).position().left,$('#'+data.user_name).position().top,left_x,top_y);
                 $('#'+data.user_name).animate({
                     left: left_x+'px',
                     top:  top_y+'px'},500, function() {
                     /* stuff to do after animation is complete */
                     chess_reduction();
                     $('#'+data.eated_name).remove();
                     chess_reduction();
                     if(user=='red')
                        user='black';
                     else
                        user='red';
                     losting(3);
                 });
            }
        }

        function wining(b){
            var i ,j;
            win=0;
            for(i=0;i<3;i++){
               for(j=3;j<6;j++){
                  if(chess_position[i][j]!=b)
                     win++;
               }
            }
            if(win==9){
                sendMessage('你赢了！');
            }
        }

        function losting(b){
            var i ,j;
            lost=0;
            for(i=7;i<10;i++){
               for(j=3;j<6;j++){
                  if(chess_position[i][j]!=b)
                     lost++;
               }
            }
            console.log(lost);
            if(lost==9){
                sendMessage('你输了！');
            }
        }

        //棋子移动规则
        function chess_rule(str){
        	var x=$('#checkerboard').offset().left;
            var y=$('#checkerboard').offset().top;

            var coo_x=Math.round(($('#'+str).position().left-x)/50);
            var coo_y=Math.round(($('#'+str).position().top-y)/50);

            //兵的走法
            if(str.lastIndexOf('bing')!=-1||str.lastIndexOf('zu')!=-1){
                if(coo_y>=6){
                	addCircle(coo_x,coo_y-1,x,y);
                }
                else{
                	if(coo_y-1>=0)
                	    addCircle(coo_x,coo_y-1,x,y);
                	if(coo_x+1<=8)
                	    addCircle(coo_x-1,coo_y,x,y);
                    if(coo_x-1>=0)
                	    addCircle(coo_x+1,coo_y,x,y);
                }
            }
            //炮的走法

            if(str.lastIndexOf('pao')!=-1){
                var i=coo_x+1,j=coo_y,count=0;
                //向下
                //alert(coo_x+' '+coo_y);
                for(i;i<9;i++){
                	if(chess_position[j][i]==0&&count==0)
                	{
                        addCircle(i,j,x,y);
                	}
                	else{
                		if(count==1&&chess_position[j][i]!=0){
                            addCircle(i,j,x,y);
                            break;
                		}
                		if(count==0&&chess_position[j][i]!=0){
                		    count++;
                	    }
                	}
                }
                //上
                var i=coo_x-1,j=coo_y,count=0;
                for(i;i>=0;i--){
                	if(chess_position[j][i]==0&&count==0)
                        addCircle(i,j,x,y);
                    else{
                		if(count==1&&chess_position[j][i]!=0){
                            addCircle(i,j,x,y);
                            break;
                		}
                		if(count==0&&chess_position[j][i]!=0){
                		    count++;
                	    }
                	}
                }
                //右
                var i=coo_x,j=coo_y+1,count=0;
                for(j;j<10;j++){
                	if(chess_position[j][i]==0&&count==0)
                        addCircle(i,j,x,y);
                    else{
                		if(count==1&&chess_position[j][i]!=0){
                            addCircle(i,j,x,y);
                            break;
                		}
                		if(count==0&&chess_position[j][i]!=0){
                		    count++;
                	    }
                	}
                }
                //左
                var i=coo_x,j=coo_y-1,count=0;
                for(j;j>=0;j--){
                	if(chess_position[j][i]==0&&count==0)
                        addCircle(i,j,x,y);
                    else{
                		if(count==1&&chess_position[j][i]!=0){
                            addCircle(i,j,x,y);
                            break;
                		}
                		if(count==0&&chess_position[j][i]!=0){
                		    count++;
                	    }
                	}
                }
            }
            //车的走法
            if(str.lastIndexOf('ju')!=-1){
                var i=coo_x+1,j=coo_y;
                //下
                for(i;i<9;i++){
                	if(chess_position[j][i]==0){
                		addCircle(i,j,x,y);
                	}
                	else{
                		addCircle(i,j,x,y);
                		break;
                	}
                }

                //上
                var i=coo_x-1,j=coo_y;
                for(i;i>=0;i--){
                	if(chess_position[j][i]==0){
                		addCircle(i,j,x,y);
                	}
                	else{
                		addCircle(i,j,x,y);
                		break;
                	}
                }

                //右
                var i=coo_x,j=coo_y+1;
                for(j;j<10;j++){
                	if(chess_position[j][i]==0)
                        addCircle(i,j,x,y);
                    else{
                        addCircle(i,j,x,y);
                        break;
                	}
                }
                //左
                var i=coo_x,j=coo_y-1;
                for(j;j>=0;j--){
                	if(chess_position[j][i]==0)
                        addCircle(i,j,x,y);
                    else{
                        addCircle(i,j,x,y);
                        break;
                	}
                }
            }
            //马的移动
            if(str.lastIndexOf('ma')!=-1){
            	var i=coo_x,j=coo_y;
            	//下边
                if(i>=0&&i<=8&&j>=0&&j<=7){
                	if(chess_position[j+1][i]==0){
                	    if(i>=1)
                            addCircle(i-1,j+2,x,y);
                        if(i+1<=8)
                            addCircle(i+1,j+2,x,y);
                    }
                }
                //上
                if(i>=0&&i<=8&&j>=2&&j<=9){
                	if(chess_position[j-1][i]==0){
                		if(i>=1){
                	        addCircle(i-1,j-2,x,y);
                	    }
                	    if(i+1<=8){
                            addCircle(i+1,j-2,x,y);
                        }
                    }
                }
                //右
                if(i>=0&&i<=6&&j>=0&&j<=9){
                	if(chess_position[j][i+1]==0){
                		if(j+1<=9){
                            addCircle(i+2,j+1,x,y);
                        }
                        if(j-1>=0){
                            addCircle(i+2,j-1,x,y);
                        }
                    }
                }
                //左
                if(i>=2&&i<=8&&j>=0&&j<=9){
                	if(chess_position[j][i-1]==0){
                		if(j+1<=9){
                            addCircle(i-2,j+1,x,y);
                        }
                        if(j-1>=0){
                            addCircle(i-2,j-1,x,y);
                        }
                    }
                }
            }
            //象的移动
            if(str.lastIndexOf('xiang')!=-1){
            	var i=coo_x,j=coo_y;
            	//右下
                if(i>=0&&i<=6&&j>=5&&j<=7){
                	if(chess_position[j+1][i+1]==0){
                        addCircle(i+2,j+2,x,y);
                    }
                }
                //右上
                if(i>=0&&i<=6&&j>=7&&j<=9){
                	if(chess_position[j-1][i+1]==0){
                        addCircle(i+2,j-2,x,y);
                    }
                }
                //左上
                if(i>=2&&i<=8&&j>=7&&j<=9){
                	if(chess_position[j-1][i-1]==0){
                        addCircle(i-2,j-2,x,y);
                    }
                }
                //左下
                if(i>=2&&i<=8&&j>=5&&j<=7){
                	if(chess_position[j+1][i-1]==0){
                        addCircle(i-2,j+2,x,y);
                    }
                }
            }
            //士的移动
            if(str.lastIndexOf('shi')!=-1){
            	var i=coo_x,j=coo_y;
             	if(i<=4&&j<=8&&j>=5){
            	    addCircle(i+1,j+1,x,y);//右下
            	}
            	if(i>=4&&j>=8){
            	   addCircle(i-1,j-1,x,y);//左上
            	}
            	if(i<=4&&j>=8){
            	   addCircle(i+1,j-1,x,y);//右上
            	}
            	if(i>=4&&j<=8&&j>=5){
            	   addCircle(i-1,j+1,x,y);//左下
            	}
            }
            //将、帅的移动
            if(str.lastIndexOf('jiang')!=-1||str.lastIndexOf('shuai')!=-1){
            	var i=coo_x,j=coo_y-1;
            	if(coo_y-1>=7)
                	addCircle(coo_x,coo_y-1,x,y);//向上
                if(coo_y+1<=9)
                	addCircle(coo_x,coo_y+1,x,y);//向下
                if(coo_x+1<=5)
                	addCircle(coo_x+1,coo_y,x,y);//向右
                if(coo_x-1>=3)
                	addCircle(coo_x-1,coo_y,x,y);//向左
                //通天
                for(j;j>=0;j--){
                	if(chess_position[j][i]==1||chess_position[j][i]==2)
                       break;
                    if(chess_position[j][i]==3||chess_position[j][i]==4){
                       addCircle(i,j,x,y);
                       alert("将军!");
                       break;
                    }
                }
            }

        }

        function addCircle(x,y,c_x,c_y){
            var dcircle=$('<div></div>');
            dcircle.attr('class','circle');
            dcircle.css({
            	'left': x*50+c_x-7+'px',
            	'top': y*50+c_y-7+'px'
            });
            $('.chess-box').append(dcircle);
        }

        //计时器
        var chess_time;
        var m,s;
        var start;
        function time(){
            m=2;
        	s=59;
        	start=setInterval(function(){
        		if(user=='red'){
        			time_write(m,s);
        			$('#enemy_time').text(chess_time);
                }
                else{
                	time_write(m,s);
                	$('#own_time').text(chess_time);
                }
            },1000);
        }

        function time_write(){
            if(s<10){
            //如果秒数少于10在前面加上0
              chess_time = '0'+m+':0'+s;
            }else{
              chess_time = '0'+m+':'+s;
            }
            s--;
            if(s<0){
            //如果秒数少于0就变成59秒
              s=59;
              m--;
            }
            if(m==-1&&s==59&&user=='red'){
               user='black';
               clearInterval(start);
               time();
            }
            if(m==-1&&s==59&&user=='black'){
               user='red';
               clearInterval(start);
               time();
            }
        }

    </script>

</body>

</html>